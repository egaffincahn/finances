% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AddTransaction.R
\name{AddTransaction}
\alias{AddTransaction}
\alias{addTransactionManual}
\alias{addTransactionAuto}
\alias{viewTransactionsAutoLoad}
\alias{editTransaction}
\alias{viewTransactionsDate}
\alias{viewTransactions}
\title{Add, edit or view transactions}
\usage{
addTransactionManual(ledger = viewLedger(file = file),
  file = viewLedgerFile(), yr = currentYear(), mo = currentMonth(),
  dy = currentDay())

addTransactionAuto(ledger = viewLedger(file = file),
  file = viewLedgerFile())

viewTransactionsAutoLoad(suppress = TRUE)

editTransaction(ledger = viewLedger(file = file), file = viewLedgerFile(),
  yr = currentYear(), mo = currentMonth(), dy = NULL, from = NULL,
  to = NULL, descriptions = NULL, budget.categories = NULL,
  amount.ops = `==`, account.amounts = NULL, account.categories = NULL,
  suppress = TRUE, trunc = TRUE)

viewTransactionsDate(ledger = viewLedger(file = file),
  file = viewLedgerFile(), yr = currentYear(), mo = currentMonth(),
  dy = NULL)

viewTransactions(ledger = viewLedger(file = file), file = viewLedgerFile(),
  yr = NULL, mo = NULL, dy = NULL, from = NULL,
  to = componentsToDate(), descriptions = NULL, budget.categories = NULL,
  amount.ops = `==`, account.amounts = NULL, account.categories = NULL,
  query = is.null(yr) && is.null(mo) && is.null(dy) && is.null(from) &&
  is.null(to) && is.null(descriptions) && is.null(budget.categories) &&
  is.null(account.amounts) && is.null(account.categories), suppress = TRUE,
  trunc = TRUE)
}
\arguments{
\item{ledger}{Data frame ledger. The ledger where each row is a transaction
and with columns for \code{year}, \code{month}, \code{day},
\code{description}, \code{budget.category}, and one column for each
financial account. All columns should be numeric except for
\code{description} and \code{budget.category}.}

\item{file}{The path for the ledger for loading and saving. Has an underlying
default that needs to be changed in the \code{ViewLedger} file.}

\item{yr}{Year, month, day. When one of these is \code{NULL}, function
behavior is to allow all possible values.}

\item{mo}{Year, month, day. When one of these is \code{NULL}, function
behavior is to allow all possible values.}

\item{dy}{Year, month, day. When one of these is \code{NULL}, function
behavior is to allow all possible values.}

\item{suppress}{Prevents it from printing to the console. All low-level
functions default to \code{TRUE}, while high-level functions that do not
have callers and exist for the sole purpose of printing out information
default to \code{FALSE}.}

\item{from}{Boundaries on the ledger dates. Requires Date class.}

\item{to}{Boundaries on the ledger dates. Requires Date class.}

\item{descriptions}{Values in the descriptions column to search for. Uses
regular expressions.}

\item{budget.categories}{Values from the factor column of budget category to
search for. Must be exact.}

\item{amount.ops, account.amounts}{Operators to search transactions. For
example, to find transactions where more than one thousand dollars were
spent, use \code{amount.ops = `<`, account.amounts = -1000}.}

\item{account.categories}{Restricts the transactions shown to ones where the
account(s) in this argument are not 0.}

\item{trunc}{removes the account columns which has all values == 0.}

\item{query}{Asks the user for descriptions, transaction amounts, etc.
manually. Queried values will overwrite the input arguments. Default
behavior is to query if all the input options are \code{NULL}.}
}
\description{
Add a transaction to the ledger manually via inputs to the
  console with \code{addTransactionManual}, or automatically by reading from
  a file with \code{addTransactionAuto}. You can see what the transactions
  are that would be automatically entered with
  \code{viewTransactionsAutoLoad}.\cr \code{editTransaction} will display the
  transactions for the given year, month, day. It defaults to show the
  current month's. If \code{yr}, \code{mo}, \code{dy} is \code{NULL}, it will
  show transactions from all years, months, days, respectively, within the
  others. It also takes other arguments to narrow the options to show. These
  options are the same as for \code{viewTransactions}, because
  \code{editTransaction} will call the former to limit the options shown. \cr
  \code{viewTransactions} searches for transactions based on the provided
  criteria which can be passed as arguments or queries in the console. If
  user gives any criteria, then by default, won't query the user for
  additional criteria. \code{viewTransactionsDate} is a convenient wrapper to
  show the transactions for just the current month.Instead, the functions
  with date subdivisions are more appropriate. This is the appropriate way to
  view a reasonable number of transactions at one time. It takes the
  \code{year}, \code{month}, and \code{day} to prune down the ledger. If any
  date specification is \code{NULL}, it allows all values for that specific
  date column. \code{year} and \code{month} default to \code{currentYear()}
  and \code{currentMonth()}, while \code{day} defaults to all values via
  \code{NULL}. The ledger can further be restricted by including an early or
  late bound with \code{from} and \code{to}. These require a \code{POSIXct}
  type. You can use \code{componentsToDate} to build one using a year, month,
  and day. Both methods can be done alone or in tandem.\cr For a transaction
  to be shown, it has to fit ALL of the input argument criteria. However,
  each of the input arguments can be a single value or can be a vector. If
  one is a vector, a transaction that fits any of the values in the vector
  will be shown.
}
